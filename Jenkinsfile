pipeline {
    agent any

    parameters {
        choice(
            name: 'ENV',
            choices: ['dev', 'prod'],
            description: '–ö—É–¥–∞ –¥–µ–ø–ª–æ–∏—Ç—å?'
        )
    }

    stages {
        stage('–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞') {
            steps {
                echo "üîπ –î–µ–ø–ª–æ–π –≤ ${params.ENV} –Ω–∞ nemoserv:/opt/app/${params.ENV}"
                cleanWs()  // –û—á–∏—Å—Ç–∫–∞ workspace
            }
        }

        stage('–ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤') {
            steps {
                script {
                    // –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –ø–∞—Ä–∞–º–µ—Ç—Ä ENV –∑–∞–¥–∞–Ω
                    if (!params.ENV) {
                        error("–ü–∞—Ä–∞–º–µ—Ç—Ä ENV –Ω–µ –≤—ã–±—Ä–∞–Ω!")
                    }

                    // –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ SSH
                    sshPublisher(
                        publishers: [
                            sshPublisherDesc(
                                configName: 'nemoserv-ssh',  // –î–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ Jenkins
                                transfers: [
                                    sshTransfer(
                                        sourceFiles: '**/*',  // –í—Å–µ —Ñ–∞–π–ª—ã –∏–∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
                                        removePrefix: '',      // –ù–µ –æ–±—Ä–µ–∑–∞—Ç—å –ø—É—Ç–∏
                                        remoteDirectory: "/opt/app/${params.ENV}",
                                        execCommand: """
                                            echo '‚úÖ –§–∞–π–ª—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã –≤ /opt/app/${params.ENV}'
                                            chmod -R 755 /opt/app/${params.ENV}
                                        """
                                    )
                                ]
                            )
                        ]
                    )
                }
            }
        }
    }

    post {
        success {
            echo "üéâ –£—Å–ø–µ—à–Ω—ã–π –¥–µ–ø–ª–æ–π –≤ ${params.ENV}!"
        }
        failure {
            echo "‚ùå –û—à–∏–±–∫–∞ –¥–µ–ø–ª–æ—è –≤ ${params.ENV}"
        }
    }
}
